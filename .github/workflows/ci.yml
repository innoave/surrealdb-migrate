name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings

permissions:
  contents: read

jobs:
  # Depends on all actions that are required for a "successful" CI run.
  tests-pass:
    name: all checks successful
    runs-on: ubuntu-latest
    needs:
      - fmt
      - clippy
      - msrv
      - doc
      - unit-test
      - integration-test
    steps:
      - run: exit 0

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace
      - uses: Swatinem/rust-cache@v2

  fmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - run: cargo +nightly fmt --check --all
      - uses: Swatinem/rust-cache@v2

  unit-test:
    name: Unit-Test  # testcontainers do not run on macos and windows
    runs-on: ${{ matrix.os }}
    needs:
      - fmt
      - clippy
      - msrv
      - doc
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - windows-latest
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --lib --bins --no-fail-fast
      - uses: Swatinem/rust-cache@v2

  integration-test:
    name: Integration-Test
    runs-on: ubuntu-latest
    needs:
      - fmt
      - clippy
      - msrv
      - doc
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-fail-fast
      - uses: Swatinem/rust-cache@v2

  msrv:
    name: Build with MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Get current MSRV from Cargo.toml
        id: current_msrv
        run: |
          msrv=$(cat Cargo.toml | grep rust-version | sed 's/.* = "//; s/"//')
          echo "msrv=$msrv" >> $GITHUB_OUTPUT
      - name: Install MSRV toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.current_msrv.outputs.msrv }}
          override: true
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace
        env:
          RUSTFLAGS: "" # remove -Dwarnings
      - uses: Swatinem/rust-cache@v2

  doc:
    name: API Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --all-features --no-deps
      - uses: Swatinem/rust-cache@v2
