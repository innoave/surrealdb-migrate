[workspace]
members = [
    "database-migration",
    "database-migration-files",
    "surrealdb-migrate-db-client",
    "surrealdb-migrate-config",
    "surrealdb-migrate",
]
resolver = "2"

[workspace.package]
authors = ["haraldmaida"]
license = "Apache-2.0"
edition = "2021"
rust-version = "1.80.1"
repository = "https://github.com/innoave/surrealdb-migrate"

[workspace.dependencies]
database-migration = { path = "database-migration" }
database-migration-files = { path = "database-migration-files" }
surrealdb-migrate-db-client = { path = "surrealdb-migrate-db-client" }
surrealdb-migrate-config = { path = "surrealdb-migrate-config" }
surrealdb-migrate = { path = "surrealdb-migrate" }

chrono = "0.4"
color-eyre = "0.6"
config = { version = "0.15", default-features = false, features = ["toml"] }
crc32fast = "1"
indexmap = "2"
serde = { version = "1", features = ["derive"] }
serde_with = "3"
surrealdb = { version = "2.1", default-features = false }
thiserror = "2"
tokio = { version = "1", features = ["macros"] }

# dev-dependencies
assertor = "0.0.3"
dotenvy = "0.15"
proptest = { version = "1", default-features = false, features = ["std"] }
serial_test = "3"
testcontainers-modules = { version = "0.11" }

[workspace.lints.rust]
unsafe_code = "forbid"
unstable_features = "forbid"
bare_trait_objects = "warn"
deprecated = "warn"
explicit_outlives_requirements = "warn"
noop_method_call = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
#variant_size_differences = "warn"  # enable when working on performance
#missing_docs = "warn"  # uncomment when working on docs
dead_code = "allow"  # remove eventually

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
enum_glob_use = "deny"
future_not_send = "allow"
if_not_else = "allow"
missing_const_for_fn = "warn"
module_name_repetitions = "allow"
must_use_candidate = "allow"
unwrap_used = "deny"
missing_errors_doc = "allow"  # remove when working on docs
missing_panics_doc = "allow"  # remove when working on docs

[profile.release]
lto = true
strip = true
opt-level = 3
panic = 'abort'
codegen-units = 1

[profile.dev.build-override]
opt-level = 3

[profile.dev.package.backtrace]
opt-level = 3

[profile.dev.package.proptest]
overflow-checks = false

[profile.dev.package."*"]
opt-level = 1
